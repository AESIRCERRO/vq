# Create a library called "quakelib" which includes the appropriate source files.

PROJECT (QuakeLib)
CMAKE_MINIMUM_REQUIRED (VERSION 2.6)

# Enable testing framework
INCLUDE (CTest)

# Check for common include files
INCLUDE (CheckIncludeFiles)
CHECK_INCLUDE_FILES ("float.h" QUAKELIB_HAVE_FLOAT_H)
CHECK_INCLUDE_FILES ("limits.h" QUAKELIB_HAVE_LIMITS_H)
CHECK_INCLUDE_FILES ("math.h" QUAKELIB_HAVE_MATH_H)
CHECK_INCLUDE_FILES ("stdlib.h" QUAKELIB_HAVE_STDLIB_H)
CHECK_INCLUDE_FILES ("string.h" QUAKELIB_HAVE_STRING_H)

# Check if Doxygen is installed
FIND_PACKAGE(Doxygen)

# Check for SWIG and Python installation
# TODO: add IF statements for INCLUDE paths
FIND_PACKAGE(SWIG)
IF(SWIG_FOUND)
    INCLUDE(${SWIG_USE_FILE})
ENDIF(SWIG_FOUND)

FIND_PACKAGE(PythonLibs)
IF(PYTHONLIBS_FOUND)
    INCLUDE_DIRECTORIES(${PYTHON_INCLUDE_PATH})
ENDIF(PYTHONLIBS_FOUND)

FIND_PACKAGE(PythonInterp)

# Set up directory definitions
SET(QUAKELIB_DIR ${CMAKE_CURRENT_SOURCE_DIR}/)
SET(QUAKELIB_SOURCE_DIR ${QUAKELIB_DIR}/src/)
SET(QUAKELIB_PYTHON_DIR ${QUAKELIB_DIR}/python/)
SET(QUAKELIB_TEST_DIR ${QUAKELIB_DIR}/test/)
SET(QUAKELIB_BINARY_DIR ${CMAKE_CURRENT_BINARY_DIR}/)
INCLUDE_DIRECTORIES(${QUAKELIB_SOURCE_DIR})

# Generate the config.h file and add the include path for it
CONFIGURE_FILE(${QUAKELIB_DIR}/quakelib_config.h.in ${CMAKE_CURRENT_BINARY_DIR}/quakelib_config.h)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR})

SET(QUAKELIB_SOURCES
    ${QUAKELIB_SOURCE_DIR}/QuakeLibElement.cpp
    ${QUAKELIB_SOURCE_DIR}/QuakeLibEQSim.cpp
    ${QUAKELIB_SOURCE_DIR}/QuakeLibIO.cpp
	${QUAKELIB_SOURCE_DIR}/QuakeLibOkada.cpp
	${QUAKELIB_SOURCE_DIR}/QuakeLibUtil.cpp
    )

SET(QUAKELIB_HEADERS
    ${QUAKELIB_SOURCE_DIR}/QuakeLib.h
    ${QUAKELIB_SOURCE_DIR}/QuakeLibEQSim.h
    ${QUAKELIB_SOURCE_DIR}/QuakeLibIO.h
    ${QUAKELIB_SOURCE_DIR}/QuakeLibOkada.h
    ${QUAKELIB_SOURCE_DIR}/QuakeLibUtil.h
    )

# Build the QuakeLib library
add_library (quakelib ${QUAKELIB_SOURCES} ${QUAKELIB_HEADERS})

IF( CMAKE_SYSTEM_PROCESSOR STREQUAL "x86_64" )
  SET_TARGET_PROPERTIES(quakelib PROPERTIES COMPILE_FLAGS "-fPIC")
ENDIF( CMAKE_SYSTEM_PROCESSOR STREQUAL "x86_64" )

INSTALL(FILES ${QUAKELIB_HEADERS} DESTINATION include/quakelib/)

INSTALL(TARGETS quakelib
     RUNTIME DESTINATION bin/quakelib/ COMPONENT libraries
     LIBRARY DESTINATION lib/quakelib/ COMPONENT libraries
     ARCHIVE DESTINATION lib/static/quakelib/ COMPONENT libraries)

# Go into the python subdirectory
ADD_SUBDIRECTORY(python)

# If we have Python, run a set of tests with Python based scripts
IF (PYTHONLIBS_FOUND AND PYTHONINTERP_FOUND)
    ADD_TEST(NAME CondUnitTest COMMAND ${QUAKELIB_TEST_DIR}/CondUnitTest.py)
    SET_PROPERTY(TEST CondUnitTest PROPERTY ENVIRONMENT "PYTHONPATH=${QUAKELIB_BINARY_DIR}/python/")
    ADD_TEST(NAME FricUnitTest COMMAND ${QUAKELIB_TEST_DIR}/FricUnitTest.py)
    SET_PROPERTY(TEST FricUnitTest PROPERTY ENVIRONMENT "PYTHONPATH=${QUAKELIB_BINARY_DIR}/python/")
    ADD_TEST(NAME GreenUnitTest COMMAND ${QUAKELIB_TEST_DIR}/GreenUnitTest.py)
    SET_PROPERTY(TEST GreenUnitTest PROPERTY ENVIRONMENT "PYTHONPATH=${QUAKELIB_BINARY_DIR}/python/")
    ADD_TEST(NAME OctreeTest COMMAND ${QUAKELIB_TEST_DIR}/OctreeTest.py)
    SET_PROPERTY(TEST OctreeTest PROPERTY ENVIRONMENT "PYTHONPATH=${QUAKELIB_BINARY_DIR}/python/")
    ADD_TEST(NAME UtilUnitTest COMMAND ${QUAKELIB_TEST_DIR}/UtilUnitTest.py)
    SET_PROPERTY(TEST UtilUnitTest PROPERTY ENVIRONMENT "PYTHONPATH=${QUAKELIB_BINARY_DIR}/python/")
    ADD_TEST(NAME EventUnitTest COMMAND ${QUAKELIB_TEST_DIR}/EventUnitTest.py)
    SET_PROPERTY(TEST EventUnitTest PROPERTY ENVIRONMENT "PYTHONPATH=${QUAKELIB_BINARY_DIR}/python/")
    ADD_TEST(NAME GeomUnitTest COMMAND ${QUAKELIB_TEST_DIR}/GeomUnitTest.py)
    SET_PROPERTY(TEST GeomUnitTest PROPERTY ENVIRONMENT "PYTHONPATH=${QUAKELIB_BINARY_DIR}/python/")
    ADD_TEST(NAME MetadataUnitTest COMMAND ${QUAKELIB_TEST_DIR}/MetadataUnitTest.py)
    SET_PROPERTY(TEST MetadataUnitTest PROPERTY ENVIRONMENT "PYTHONPATH=${QUAKELIB_BINARY_DIR}/python/")
    ADD_TEST(NAME RectBoundTest COMMAND ${QUAKELIB_TEST_DIR}/RectBoundTest.py)
    SET_PROPERTY(TEST RectBoundTest PROPERTY ENVIRONMENT "PYTHONPATH=${QUAKELIB_BINARY_DIR}/python/")
ENDIF(PYTHONLIBS_FOUND AND PYTHONINTERP_FOUND)

